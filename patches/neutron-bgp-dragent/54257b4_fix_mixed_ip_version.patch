From 54257b431810e6f7ddc425b78607dbd72ebc0f05 Mon Sep 17 00:00:00 2001
From: Roberto Bartzen Acosta <rbartzen@gmail.com>
Date: Tue, 18 Jul 2023 14:07:24 -0300
Subject: [PATCH] Fix mixed IP version for advertised routes

In advertise_route_via_bgp_speaker() a check for the matching
ip_version was missing, leading to neutron-dynamic-routing trying
to announce prefixes with mixed IP versions in the CIDR route and
next-hop.

This type of advertisement makes no sense because the IP version of
the route must always be the same as the next-hop.

Closes-Bug: 2023632
Change-Id: I175692406262d748763ce67b186b19018368b97f
---

diff --git a/neutron_dynamic_routing/services/bgp/agent/bgp_dragent.py b/neutron_dynamic_routing/services/bgp/agent/bgp_dragent.py
index 1e7f5f9..542b317 100644
--- a/neutron_dynamic_routing/services/bgp/agent/bgp_dragent.py
+++ b/neutron_dynamic_routing/services/bgp/agent/bgp_dragent.py
@@ -34,6 +34,7 @@
 from neutron_dynamic_routing.extensions import bgp as bgp_ext
 from neutron_dynamic_routing._i18n import _, _LE, _LI, _LW
 from neutron_dynamic_routing.services.bgp.agent.driver import exceptions as driver_exc  # noqa
+from neutron_dynamic_routing.services.bgp.agent.driver import utils as driver_utils  # noqa
 from neutron_dynamic_routing.services.bgp.common import constants as bgp_consts  # noqa
 
 LOG = logging.getLogger(__name__)
@@ -459,6 +460,17 @@
 
     def advertise_route_via_bgp_speaker(self, bgp_speaker_id,
                                         bgp_speaker_as, route):
+
+        ip_addr = utils.cidr_to_ip(route['destination'])
+        dest_ip_version = driver_utils.validate_ip_addr(ip_addr)
+        next_hop_ip_version = driver_utils.validate_ip_addr(route['next_hop'])
+        if dest_ip_version != next_hop_ip_version:
+            LOG.debug('Filtering invalid advertised prefix: %(cidr)s, '
+                      'next_hop: %(nexthop)s',
+                      {'cidr': route['destination'],
+                       'nexthop': route['next_hop']})
+            return
+
         if self.cache.is_route_advertised(bgp_speaker_id, route):
             # Requested route already advertised. Hence, Nothing to be done.
             return
